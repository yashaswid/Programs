class AdjNode:
    def __init__(self,data):
        self.data=data
        self.next=None
class Graph:
    def __init__(self,vertices):
        self.V=vertices
        self.arr=[None]*self.V

    def add_edge(self,src,des):
        node=AdjNode(des)
        node.next=self.arr[src]
        self.arr[src]=node

        node = AdjNode(src)
        node.next = self.arr[des]
        self.arr[des] = node

    def print(self):
        for i in range(self.V):
            print("Adjacent list of {}\n head ".format(i),end="")
            temp=self.arr[i]
            while(temp):
                print("->{}".format(temp.data),end="")
                temp=temp.next
            print("\n")




vertices=5
graph=Graph(vertices)
graph.add_edge(0, 1)
graph.add_edge(0, 4)
graph.add_edge(1, 2)
graph.add_edge(1, 3)
graph.add_edge(1, 4)
graph.add_edge(2, 3)
graph.add_edge(3, 4)
graph.print()
